import { Reaction } from './reactionApi';
import { TranslationResult } from './translation';
import { ChatThread, ChatThreadOverview } from './threadApi';
type MessageType =
	| 'read'
	| 'delivery'
	| 'channel'
	| 'txt'
	| 'cmd'
	| 'custom'
	| 'loc'
	| 'img'
	| 'audio'
	| 'file'
	| 'video';

type ChatType = 'singleChat' | 'groupChat' | 'chatRoom';

/** Message online state type. */
/** 消息在线状态类型。 */
export enum ONLINESTATETYPE {
	/** Offline message. */
	/** 离线消息。 */
	OFFLINE = 0,
	/** Online message. */
	/** 在线消息。 */
	ONLINE = 1,
	/** Unknown state. */
	/** 未知状态。 */
	UNKNOWN = 2,
	/** Message online status is not enabled. */
	/** 未启用消息在线状态。 */
	NONE = 3,
}
interface ReadMsgSetParameters {
	id: string;
	to: string;
	from?: string;
}
interface ReadMsgBody extends ReadMsgSetParameters {
	type: 'read';
	ackId?: string;
	mid?: string;
	groupReadCount?: number;
	ackContent?: string;
	onlineState?: ONLINESTATETYPE;
}
interface ReadParameters {
	type: 'read';
	id: string;
}

interface CreateReadMsgParameters {
	/** The receiver. */
	/** 消息接收方。 */
	to: string;
	/** The sender, only can be yourself and can not de changed. */
	/** 消息发送方，只能是自己，不可改变。*/
	from?: string;
	/** The message type. */
	/** 消息类型。 */
	type: 'read';
	/** The ID of the read message */
	/** 已读消息的 ID。 */
	id: string;
}

interface DeliveryParameters {
	id: string;
	type: 'delivery';
}
interface DeliveryMsgSetParameters {
	ackId: string;
	to: string;
	from?: string;
}
interface DeliveryMsgBody {
	id: string;
	mid?: string;
	ackId?: string;
	type: 'delivery';
	to: string;
	from?: string;
	onlineState?: ONLINESTATETYPE;
}

interface CreateDeliveryMsgParameters {
	/** The delivered message ID. */
	/** 送达消息 ID。 */
	ackId: string;
	/** The message type. */
	/** 消息类型。 */
	type: 'delivery';
	/** The receiver. */
	/** 消息接收方。 */
	to: string;
	/** The sender, only can be yourself and can not de changed. */
	/** 消息发送方，只能是自己，不可改变。*/
	from?: string;
}

interface TextParameters {
	type: 'txt';
	id: string;
}
interface TextMsgSetParameters {
	chatType: ChatType;
	to: string;
	msg: string;
	from?: string;
	roomType?: boolean;
	success?: () => void;
	fail?: () => void;
	ext?: { [key: string]: any };
}
interface TextMsgBody {
	id: string;
	chatType: ChatType;
	type: 'txt';
	to: string;
	msg: string;
	from?: string;
	roomType?: boolean;
	group?: string;
	success?: () => void;
	fail?: () => void;
	ext?: { [key: string]: any };
	msgConfig?: { [key: string]: any };
	time: number;
	reactions?: Reaction;
	translations?: TranslationResult;
	chatThread?: ChatThread;
	chatThreadOverview?: ChatThreadOverview;
	onlineState?: ONLINESTATETYPE;
	priority?: MessagePriority;
}

interface CreateTextMsgParameters {
	/** Session type. */
	/** 会话类型。 */
	chatType: ChatType;
	/** Message type. */
	/** 消息类型。 */
	type: 'txt';
	/** The receiver. */
	/** 消息接收方。 */
	to: string;
	/** The message content. */
	/** 消息内容。 */
	msg: string;
	/** The sender, only can be yourself and can not de changed. */
	/** 消息发送方，只能是自己，不可改变。*/
	from?: string;
	/** Message extension. */
	/** 消息扩展。 */
	ext?: { [key: string]: any };
}

interface CmdParameters {
	type: 'cmd';
	id: string;
}
interface CmdMsgSetParameters {
	chatType: ChatType;
	to: string;
	action: string;
	from?: string;
	roomType?: boolean;
	success?: () => void;
	fail?: () => void;
	ext?: { [key: string]: any };
}

interface CmdMsgBody {
	id: string;
	chatType: ChatType;
	type: 'cmd';
	to: string;
	action: string;
	from?: string;
	roomType?: boolean;
	group?: string;
	success?: () => void;
	fail?: () => void;
	ext?: { [key: string]: any };
	msgConfig?: { [key: string]: any };
	time: number;
	reactions?: Reaction;
	chatThread?: ChatThread;
	chatThreadOverview?: ChatThreadOverview;
	onlineState?: ONLINESTATETYPE;
	priority?: MessagePriority;
}

interface CreateCmdMsgParameters {
	/** The message type. */
	/** 消息类型。 */
	type: 'cmd';
	/** The session type. */
	/** 会话类型。 */
	chatType: ChatType;
	/** The receiver. */
	/** 消息接收方。 */
	to: string;
	/** The command. */
	/** 指令。 */
	action: string;
	/** The sender, only can be yourself and can not de changed. */
	/** 消息发送方，只能是自己，不可改变。*/
	from?: string;
	// roomType?: boolean,
	/** The message extension. */
	/** 消息扩展。 */
	ext?: { [key: string]: any };
}

interface CustomParameters {
	type: 'custom';
	id: string;
}
interface CustomMsgSetParameters {
	chatType: ChatType;
	to: string;
	customEvent: string;
	customExts: { [key: string]: any };
	from?: string;
	roomType?: boolean;
	success?: () => void;
	fail?: () => void;
	ext?: { [key: string]: any };
}

interface CustomMsgBody {
	id: string;
	chatType: ChatType;
	type: 'custom';
	to: string;
	customEvent: string;
	customExts: { [key: string]: any };
	from?: string;
	roomType?: boolean;
	group?: string;
	params?: { [key: string]: any };
	success?: () => void;
	fail?: () => void;
	ext?: { [key: string]: any };
	msgConfig?: { [key: string]: any };
	time: number;
	reactions?: Reaction;
	chatThread?: ChatThread;
	chatThreadOverview?: ChatThreadOverview;
	onlineState?: ONLINESTATETYPE;
	priority?: MessagePriority;
}

interface CreateCustomMsgParameters {
	/** The message type. */
	/** 消息类型。 */
	type: 'custom';
	/** The session type. */
	/** 会话类型。 */
	chatType: ChatType;
	/** The receiver. */
	/** 消息接收方。 */
	to: string;
	/** The custom event. */
	/** 自定义事件。 */
	customEvent: string;
	/** The custom event extension. */
	/** 自定事件扩展。 */
	customExts: { [key: string]: any };
	/** The sender, only can be yourself and can not de changed. */
	/** 消息发送方，只能是自己，不可改变。*/
	from?: string;
	/** Message extension. */
	/** 消息扩展。 */
	ext?: { [key: string]: any };
}

interface LocationParameters {
	type: 'loc';
	id: string;
}
interface LocationMsgSetParameters {
	chatType: ChatType;
	to: string;
	addr: string;
	buildingName: string;
	lat: number;
	lng: number;
	from?: string;
	roomType?: boolean;
	success?: () => void;
	fail?: () => void;
	ext?: { [key: string]: any };
}

interface LocationMsgBody {
	id: string;
	chatType: ChatType;
	type: 'loc';
	to: string;
	addr: string;
	buildingName: string;
	lat: number;
	lng: number;
	from?: string;
	roomType?: boolean;
	group?: string;
	success?: () => void;
	fail?: () => void;
	ext?: { [key: string]: any };
	msgConfig?: { [key: string]: any };
	time: number;
	reactions?: Reaction;
	chatThread?: ChatThread;
	chatThreadOverview?: ChatThreadOverview;
	onlineState?: ONLINESTATETYPE;
	priority?: MessagePriority;
}

interface CreateLocationMsgParameters {
	/** The message type. */
	/** 消息类型。 */
	type: 'loc';
	/** The session type. */
	/** 会话类型。 */
	chatType: ChatType;
	/** The receiver. */
	/** 消息接收方。 */
	to: string;
	/** The building name. */
	/** 建筑物名称。 */
	buildingName: string;
	/** Address. */
	/** 地址。 */
	addr: string;
	/** The latitude. */
	/** 纬度。 */
	lat: number;
	/** The longitude. */
	/** 精度。 */
	lng: number;
	/** The sender, only can be yourself and can not de changed. */
	/** 消息发送方，只能是自己，不可改变。*/
	from?: string;
	/** Message extension. */
	/** 消息扩展。 */
	ext?: { [key: string]: any };
}

interface ImgParameters {
	type: 'img';
	id: string;
}

interface ImgMsgSetParameters {
	chatType: ChatType;
	to: string;
	file: object;
	width?: number;
	height?: number;
	fileInputId?: string;
	from?: string;
	roomType?: boolean;
	group?: string;
	success?: () => void;
	fail?: () => void;
	ext?: { [key: string]: any };
	url?: string;
	onFileUploadError?: (error: any) => void;
	onFileUploadComplete?: (data: any) => void;
	onFileUploadProgress?: (data: any) => void;
	uploadError?: () => void;
	uploadComplete?: () => void;
	msgConfig?: { [key: string]: any };
	body?: {
		url: string;
		type: string;
		filename: string;
	};
}

interface ImgMsgBody extends ImgMsgSetParameters {
	id: string;
	type: 'img';
	time: number;
	secret?: string;
	thumb?: string;
	thumb_secret?: string;
	reactions?: Reaction;
	chatThread?: ChatThread;
	chatThreadOverview?: ChatThreadOverview;
	onlineState?: ONLINESTATETYPE;
	priority?: MessagePriority;
}

interface CreateImgMsgParameters {
	/** Message type. */
	/** 消息类型。 */
	type: 'img';
	/** Session type. */
	/** 会话类型。 */
	chatType: ChatType;
	/** The file object. */
	/** 文件对象。 */
	file: File;
	/** The file URL.  If the file has been uploaded, you can directly use the URL. */
	/** 文件 url，如果文件已经上传可以直接使用 url。 */
	url?: string;
	/** The image width. */
	/** 图片宽度。 */
	width?: number;
	/** The image height. */
	/** 图片高度。 */
	height?: number;
	/** The receiver. */
	/** 消息接收方。 */
	to: string;
	/** The sender, only can be yourself and can not de changed. */
	/** 消息发送方，只能是自己，不可改变。*/
	from?: string;
	/** The callback of file upload error. */
	/** 文件上传错误的回调。 */
	onFileUploadError?: (error: any) => void;
	/** The callback of file upload complete. */
	/** 文件上传完成的回调。 */
	onFileUploadComplete?: (data: any) => void;
	/** The callback of file upload progress. */
	/** 文件上传进度的回调。 */
	onFileUploadProgress?: (data: any) => void;
	/** Message extension. */
	/** 消息扩展。 */
	ext?: { [key: string]: any };
	/** The message body. */
	/** 消息体。 */
	body?: {
		/** The file URL. */
		/** 文件 url。 */
		url: string;
		/** The file type. */
		/** 文件类型。 */
		type: string;
		/** The file type. */
		/** 文件名。 */
		filename: string;
	};
}

interface AudioParameters {
	type: 'audio';
	id: string;
}
interface AudioMsgSetParameters {
	chatType: ChatType;
	file: object;
	filename: string;
	length: number;
	file_length: number;
	fileInputId?: string;
	to: string;
	from?: string;
	roomType?: boolean;
	success?: () => void;
	fail?: () => void;
	ext?: { [key: string]: any };
	apiUrl?: string;
	onFileUploadError?: (err: any) => void;
	onFileUploadComplete?: (data: any) => void;
	onFileUploadProgress?: (data: ProgressEvent) => void;
	body?: {
		url: string;
		type: string;
		filename: string;
	};
}

interface AudioMsgBody extends AudioMsgSetParameters {
	id: string;
	type: 'audio';
	url?: string;
	secret?: string;
	filetype?: string;
	accessToken?: string;
	group?: string;
	msgConfig?: { [key: string]: any };
	time: number;
	reactions?: Reaction;
	chatThread?: ChatThread;
	chatThreadOverview?: ChatThreadOverview;
	onlineState?: ONLINESTATETYPE;
	priority?: MessagePriority;
}

interface CreateAudioMsgParameters {
	/** The message type. */
	/** 消息类型。 */
	type: 'video';
	/** The session type. */
	/** 会话类型。 */
	chatType: ChatType;
	/** The file object. */
	/** 文件对象。 */
	file: object;
	/** The file name. */
	/** 文件名。 */
	filename: string;
	/** The video duration. */
	/** 视频时长。 */
	length: number;
	/** The video file length. */
	/** 视频文件大小。 */
	file_length: number;
	/** The input ID of the uploaded file. */
	/** 上传文件的input ID。 */
	fileInputId?: string;
	/** The receiver. */
	/** 消息的接收方。 */
	to: string;
	/** The sender, only can be yourself and can not de changed. */
	/** 消息发送方，只能是自己，不可改变。*/
	from?: string;
	/** Message extension. */
	/** 消息扩展。 */
	ext?: { [key: string]: any };
	// apiUrl?: string,
	/** The callback of file upload error. */
	/** 文件上传错误的回调。 */
	onFileUploadError?: (error: any) => void;
	/** The callback of file upload complete. */
	/** 文件上传完成的回调。 */
	onFileUploadComplete?: (data: any) => void;
	/** The callback of file upload progress. */
	/** 文件上传进度的回调。 */
	onFileUploadProgress?: (data: any) => void;
	/** The message body. */
	/** 消息体。 */
	body?: {
		/** The file URL. */
		/** 文件 url。 */
		url: string;
		/** The file type. */
		/** 文件类型。 */
		type: string;
		/** The file type. */
		/** 文件名。 */
		filename: string;
	};
}

interface VideoParameters {
	type: 'video';
	id: string;
}
interface VideoMsgSetParameters {
	chatType: ChatType;
	file: object;
	filename: string;
	length: number;
	file_length: number;
	fileInputId?: string;
	to: string;
	from?: string;
	roomType?: boolean;
	success?: () => void;
	fail?: () => void;
	ext?: { [key: string]: any };
	apiUrl?: string;
	onFileUploadError?: (err: any) => void;
	onFileUploadComplete?: (data: any) => void;
	onFileUploadProgress?: (data: ProgressEvent) => void;
	body?: {
		url: string;
		type: string;
		filename: string;
	};
}

interface VideoMsgBody extends VideoMsgSetParameters {
	id: string;
	type: 'video';
	url?: string;
	secret?: string;
	filetype?: string;
	accessToken?: string;
	msgConfig?: { [key: string]: any };
	group?: string;
	time: number;
	reactions?: Reaction;
	chatThread?: ChatThread;
	chatThreadOverview?: ChatThreadOverview;
	onlineState?: ONLINESTATETYPE;
	priority?: MessagePriority;
}

interface CreateVideoMsgParameters {
	/** The message type. */
	/** 消息类型。 */
	type: 'video';
	/** The session type. */
	/** 会话类型。 */
	chatType: ChatType;
	/** The file object. */
	/** 文件对象。 */
	file: object;
	/** The file name. */
	/** 文件名。 */
	filename: string;
	/** The video duration. */
	/** 视频时长。 */
	length: number;
	/** The video file length. */
	/** 视频文件大小。 */
	file_length: number;
	/** The input ID of the uploaded file. */
	/** 上传文件的input ID。 */
	fileInputId?: string;
	/** The receiver. */
	/** 消息的接收方。 */
	to: string;
	/** The sender, only can be yourself and can not de changed. */
	/** 消息发送方，只能是自己，不可改变。*/
	from?: string;
	/** Message extension. */
	/** 消息扩展。 */
	ext?: { [key: string]: any };
	// apiUrl?: string,
	/** The callback of file upload error. */
	/** 文件上传错误的回调。 */
	onFileUploadError?: (error: any) => void;
	/** The callback of file upload complete. */
	/** 文件上传完成的回调。 */
	onFileUploadComplete?: (data: any) => void;
	/** The callback of file upload progress. */
	/** 文件上传进度的回调。 */
	onFileUploadProgress?: (data: any) => void;
	/** The message body. */
	/** 消息体。 */
	body?: {
		/** The file URL. */
		/** 文件 url。 */
		url: string;
		/** The file type. */
		/** 文件类型。 */
		type: string;
		/** The file type. */
		/** 文件名。 */
		filename: string;
	};
}

interface FileParameters {
	type: 'file';
	id: string;
}
interface FileMsgSetParameters {
	chatType: ChatType;
	file: any;
	filename: string;
	fileInputId?: string;
	to: string;
	from?: string;
	roomType?: boolean;
	success?: () => void;
	fail?: () => void;
	ext?: { [key: string]: any };
	apiUrl?: string;
	onFileUploadError?: () => void;
	onFileUploadComplete?: () => void;
	onFileUploadProgress?: () => void;
	body?: {
		url: string;
		type: string;
		filename: string;
	};
}

interface FileMsgBody extends FileMsgSetParameters {
	id: string;
	type: 'file';
	group?: string;
	url?: string;
	secret?: string;
	length?: number;
	file_length?: number;
	filetype?: string;
	accessToken?: string;
	msgConfig?: { [key: string]: any };
	time: number;
	reactions?: Reaction;
	chatThread?: ChatThread;
	chatThreadOverview?: ChatThreadOverview;
	onlineState?: ONLINESTATETYPE;
	priority?: MessagePriority;
}

interface CreateFileMsgParameters {
	/** The message type. */
	/** 消息类型。 */
	type: 'file';
	/** The session type. */
	/** 会话类型。 */
	chatType: ChatType;
	/** The file object. */
	/** 文件对象。 */
	file: any;
	/** The file name. */
	/** 文件名。 */
	filename: string;
	/** The input ID of the uploaded file. */
	/** 上传文件的input ID。 */
	fileInputId?: string;
	/** The receiver. */
	/** 消息的接收方。 */
	to: string;
	/** The sender, only can be yourself and can not de changed. */
	/** 消息发送方，只能是自己，不可改变。*/
	from?: string;
	/** Message extension. */
	/** 消息扩展。 */
	ext?: { [key: string]: any };
	// apiUrl?: string,
	/** The callback of file upload error. */
	/** 文件上传错误的回调。 */
	onFileUploadError?: (error: any) => void;
	/** The callback of file upload complete. */
	/** 文件上传完成的回调。 */
	onFileUploadComplete?: (data: any) => void;
	/** The callback of file upload progress. */
	/** 文件上传进度的回调。 */
	onFileUploadProgress?: (data: any) => void;
	/** The message body. */
	/** 消息体。 */
	body?: {
		/** The file URL. */
		/** 文件 url。 */
		url: string;
		/** The file type. */
		/** 文件类型。 */
		type: string;
		/** The file type. */
		/** 文件名。 */
		filename: string;
	};
}

interface ReceivedMsgBody {
	id: string;
	mid: string;
	to: string;
	time: number;
}

interface RecallMsgBody {
	id: string;
	from: string;
	to: string;
	mid: string;
}

interface MuteMsgBody {
	mid: string;
}

interface ContactMsgBody {
	/** The message type, subscribe: request a contact, unsubscribed: cancel or refuse to add contact, subscribed: added contact successfully. */
	/** 消息类型 subscribe: 请求加好友，unsubscribed： 取消或决绝加好友，subscribed： 加好友成功。 */
	type: 'subscribe' | 'unsubscribed' | 'subscribed';
	/** The message receiver. */
	/** 消息接收者。 */
	to: string;
	/** The message sender. */
	/** 消息发送者。 */
	from: string;
	/** Reason. */
	/** 原因。 */
	status?: string;
}

interface ChannelMsgSetParameters {
	chatType: ChatType;
	to: string;
	from?: string;
}

interface ChannelMsgBody extends ChannelMsgSetParameters {
	id: string;
	group?: string;
	type: 'channel';
	time: number;
	onlineState?: ONLINESTATETYPE;
}
interface ChannelParameters {
	type: 'channel';
	id: string;
}

interface CreateChannelMsgParameters {
	/** The message type. */
	/** 消息类型。 */
	type: 'channel';
	/** The session type. */
	/** 会话类型。 */
	chatType: ChatType;
	/** The receiver. */
	/** 消息接收方。 */
	to: string;
	/** The sender, only can be yourself and can not de changed. */
	/** 消息发送方，只能是自己，不可改变。*/
	from?: string;
}

type MessagesType =
	| TextMsgBody
	| DeliveryMsgBody
	| ChannelMsgBody
	| CmdMsgBody
	| CustomMsgBody
	| ImgMsgBody
	| LocationMsgBody
	| AudioMsgBody
	| VideoMsgBody
	| FileMsgBody
	| ReadMsgBody;

type MessageSetParameters =
	| ReadMsgSetParameters
	| DeliveryMsgSetParameters
	| ChannelMsgSetParameters
	| TextMsgSetParameters
	| CmdMsgSetParameters
	| CustomMsgSetParameters
	| LocationMsgSetParameters
	| ImgMsgSetParameters
	| AudioMsgSetParameters
	| VideoMsgSetParameters
	| FileMsgSetParameters;

type CreateMsgType =
	| CreateTextMsgParameters
	| CreateImgMsgParameters
	| CreateCmdMsgParameters
	| CreateFileMsgParameters
	| CreateVideoMsgParameters
	| CreateCustomMsgParameters
	| CreateLocationMsgParameters
	| CreateChannelMsgParameters
	| CreateDeliveryMsgParameters
	| CreateReadMsgParameters
	| CreateAudioMsgParameters;

type MessageBody =
	| ReadMsgBody
	| DeliveryMsgBody
	| ChannelMsgBody
	| TextMsgBody
	| CmdMsgBody
	| CustomMsgBody
	| LocationMsgBody
	| ImgMsgBody
	| AudioMsgBody
	| VideoMsgBody
	| FileMsgBody;

/** The delivery priority of chat room messages.
 *  Currently, this attribute is available only to chat room messages. If this attribute is not set, messages are assigned a medium priority. */
/**
 * 聊天室消息的到达优先级。
 * 目前，仅聊天室消息支持该属性，不传默认为中优先级。*/
type MessagePriority =
	/** High. */
	/** 高。*/
	| 'high'
	/** Medium. */
	/** 中。*/
	| 'normal'
	/** Low. */
	/** 低。*/
	| 'low';

interface PriorityExt {
	chatroom_msg_tag: number;
}
export type {
	MessageType,
	ReadMsgSetParameters,
	ReadParameters,
	DeliveryMsgSetParameters,
	ChannelMsgSetParameters,
	TextMsgSetParameters,
	CmdMsgSetParameters,
	CustomMsgSetParameters,
	LocationMsgSetParameters,
	ImgMsgSetParameters,
	AudioMsgSetParameters,
	VideoMsgSetParameters,
	FileMsgSetParameters,
	ChatType,
	TextMsgBody,
	DeliveryMsgBody,
	ChannelMsgBody,
	CmdMsgBody,
	CustomMsgBody,
	ImgMsgBody,
	CreateImgMsgParameters,
	LocationMsgBody,
	AudioMsgBody,
	VideoMsgBody,
	FileMsgBody,
	ReceivedMsgBody,
	ReadMsgBody,
	RecallMsgBody,
	MuteMsgBody,
	ContactMsgBody,
	MessagesType,
	MessageSetParameters,
	CreateMsgType,
	MessageBody,
	CreateTextMsgParameters,
	CreateCmdMsgParameters,
	CreateFileMsgParameters,
	CreateVideoMsgParameters,
	CreateCustomMsgParameters,
	CreateLocationMsgParameters,
	CreateChannelMsgParameters,
	CreateDeliveryMsgParameters,
	CreateReadMsgParameters,
	CreateAudioMsgParameters,
	MessagePriority,
	PriorityExt,
};
